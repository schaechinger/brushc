Terminals which are not used

   DOUBLE
   FLOAT


State 4 conflicts: 10 shift/reduce
State 15 conflicts: 26 shift/reduce, 1 reduce/reduce
State 91 conflicts: 3 shift/reduce
State 92 conflicts: 3 shift/reduce
State 93 conflicts: 3 shift/reduce
State 115 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 127 conflicts: 26 shift/reduce
State 150 conflicts: 27 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header varlist stmtlist trailer

    2 header: /* empty */

    3 trailer: /* empty */

    4 stmtlist: /* empty */
    5         | stmtlist stmt

    6 varlist: /* empty */
    7        | varlist var SEMICOLON

    8 bool: expr IMPORTER IMPORTER expr
    9     | expr IMPORTER EQUALS expr
   10     | expr EXPORTER EXPORTER expr
   11     | expr EXPORTER EQUALS expr
   12     | expr EQUALS EQUALS expr
   13     | expr NOT EQUALS expr

   14 stmts: stmts stmt
   15      | stmt

   16 @1: /* empty */

   17 block: OPENCURLYBRACE @1 stmts CLOSECURLYBRACE

   18 expr: prod
   19     | div
   20     | cos
   21     | sin
   22     | tan
   23     | ln
   24     | log
   25     | floor
   26     | expr PLUS expr
   27     | expr MINUS expr
   28     | expr MOD expr

   29 prod: atom
   30     | prod MUL atom

   31 div: atom DIV atom

   32 cos: COS atom

   33 sin: SIN atom

   34 tan: TAN atom

   35 ln: LN atom

   36 log: LOG atom

   37 floor: FLOOR atom

   38 atom: NUMBER
   39     | MINUS NUMBER
   40     | ID
   41     | OPENBRACE expr CLOSEBRACE

   42 point: expr COMMA expr

   43 var: expr DOUBLEPOINT EXPORTER ID
   44    | expr EXPORTER ID

   45 stmt: var SEMICOLON
   46     | SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   47     | USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON
   48     | USECOLOR OPENBRACE ID CLOSEBRACE SEMICOLON
   49     | USESIZE OPENBRACE NUMBER CLOSEBRACE SEMICOLON
   50     | SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   51     | SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   52     | USEBRUSH OPENBRACE ID CLOSEBRACE SEMICOLON

   53 @2: /* empty */

   54 stmt: FROM @2 point
   55     | FILL SEMICOLON

   56 @3: /* empty */

   57 stmt: TO point @3 SEMICOLON
   58     | TO point
   59     | BY point SEMICOLON
   60     | BY point

   61 circle: CIRCLE point NUMBER NUMBER NUMBER

   62 stmt: circle SEMICOLON
   63     | circle

   64 elsec: /* empty */

   65 @4: /* empty */

   66 elsec: ifc ELSE @4 elsec

   67 @5: /* empty */

   68 elsec: ifc ELSE @5 block

   69 @6: /* empty */

   70 ifc: IF OPENBRACE bool CLOSEBRACE @6 block

   71 stmt: elsec
   72     | ifc
   73     | IF error

   74 @7: /* empty */

   75 stmt: LOOP @7 block
   76     | EXIT SEMICOLON

   77 @8: /* empty */

   78 stmt: DO OPENBRACE NUMBER CLOSEBRACE @8 block

   79 @9: /* empty */

   80 @10: /* empty */

   81 whilec: WHILE OPENBRACE @9 bool CLOSEBRACE @10 block

   82 @11: /* empty */

   83 @12: /* empty */

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool SEMICOLON @12 var CLOSEBRACE block

   85 stmt: whilec
   86     | forc


Terminals, with rules where they appear

$end (0) 0
error (256) 73
NUMBER (258) 38 39 46 47 49 50 51 61 78
DOUBLE (259)
FLOAT (260)
ID (261) 40 43 44 46 48 50 51 52
COMMA (262) 42 46 47 50 51
SEMICOLON (263) 7 45 46 47 48 49 50 51 52 55 57 59 62 76 84
EXPORTER (264) 10 11 43 44 46 50 51
IMPORTER (265) 8 9
DOUBLEPOINT (266) 43
OPENBRACE (267) 41 46 47 48 49 50 51 52 70 78 81 84
CLOSEBRACE (268) 41 46 47 48 49 50 51 52 70 78 81 84
OPENCURLYBRACE (269) 17
CLOSECURLYBRACE (270) 17
PLUS (271) 26
MINUS (272) 27 39
MUL (273) 30
DIV (274) 31
MOD (275) 28
EQUALS (276) 9 11 12 13
NOT (277) 13
COS (278) 32
SIN (279) 33
TAN (280) 34
LOG (281) 36
LN (282) 35
BY (283) 59 60
FROM (284) 54
TO (285) 57 58
FILL (286) 55
CIRCLE (287) 61
FLOOR (288) 37
IF (289) 70 73
ELSE (290) 66 68
WHILE (291) 81
LOOP (292) 75
EXIT (293) 76
DO (294) 78
FOR (295) 84
SAVECOLOR (296) 46
USECOLOR (297) 47 48
USESIZE (298) 49
SAVEBRUSH (299) 50 51
USEBRUSH (300) 52


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
header (48)
    on left: 2, on right: 1
trailer (49)
    on left: 3, on right: 1
stmtlist (50)
    on left: 4 5, on right: 1 5
varlist (51)
    on left: 6 7, on right: 1 7
bool (52)
    on left: 8 9 10 11 12 13, on right: 70 81 84
stmts (53)
    on left: 14 15, on right: 14 17
block (54)
    on left: 17, on right: 68 70 75 78 81 84
@1 (55)
    on left: 16, on right: 17
expr (56)
    on left: 18 19 20 21 22 23 24 25 26 27 28, on right: 8 9 10 11
    12 13 26 27 28 41 42 43 44
prod (57)
    on left: 29 30, on right: 18 30
div (58)
    on left: 31, on right: 19
cos (59)
    on left: 32, on right: 20
sin (60)
    on left: 33, on right: 21
tan (61)
    on left: 34, on right: 22
ln (62)
    on left: 35, on right: 23
log (63)
    on left: 36, on right: 24
floor (64)
    on left: 37, on right: 25
atom (65)
    on left: 38 39 40 41, on right: 29 30 31 32 33 34 35 36 37
point (66)
    on left: 42, on right: 54 57 58 59 60 61
var (67)
    on left: 43 44, on right: 7 45 84
stmt (68)
    on left: 45 46 47 48 49 50 51 52 54 55 57 58 59 60 62 63 71 72
    73 75 76 78 85 86, on right: 5 14 15
@2 (69)
    on left: 53, on right: 54
@3 (70)
    on left: 56, on right: 57
circle (71)
    on left: 61, on right: 62 63
elsec (72)
    on left: 64 66 68, on right: 66 71
@4 (73)
    on left: 65, on right: 66
@5 (74)
    on left: 67, on right: 68
ifc (75)
    on left: 70, on right: 66 68 72
@6 (76)
    on left: 69, on right: 70
@7 (77)
    on left: 74, on right: 75
@8 (78)
    on left: 77, on right: 78
whilec (79)
    on left: 81, on right: 85
@9 (80)
    on left: 79, on right: 81
@10 (81)
    on left: 80, on right: 81
forc (82)
    on left: 84, on right: 86
@11 (83)
    on left: 82, on right: 84
@12 (84)
    on left: 83, on right: 84


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (header)

    program  go to state 1
    header   go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: header . varlist stmtlist trailer

    $default  reduce using rule 6 (varlist)

    varlist  go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    1 program: header varlist . stmtlist trailer
    7 varlist: varlist . var SEMICOLON

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    NUMBER     [reduce using rule 4 (stmtlist)]
    ID         [reduce using rule 4 (stmtlist)]
    OPENBRACE  [reduce using rule 4 (stmtlist)]
    MINUS      [reduce using rule 4 (stmtlist)]
    COS        [reduce using rule 4 (stmtlist)]
    SIN        [reduce using rule 4 (stmtlist)]
    TAN        [reduce using rule 4 (stmtlist)]
    LOG        [reduce using rule 4 (stmtlist)]
    LN         [reduce using rule 4 (stmtlist)]
    FLOOR      [reduce using rule 4 (stmtlist)]
    $default   reduce using rule 4 (stmtlist)

    stmtlist  go to state 15
    expr      go to state 16
    prod      go to state 17
    div       go to state 18
    cos       go to state 19
    sin       go to state 20
    tan       go to state 21
    ln        go to state 22
    log       go to state 23
    floor     go to state 24
    atom      go to state 25
    var       go to state 26


state 5

   38 atom: NUMBER .

    $default  reduce using rule 38 (atom)


state 6

   40 atom: ID .

    $default  reduce using rule 40 (atom)


state 7

   41 atom: OPENBRACE . expr CLOSEBRACE

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 27
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 8

   39 atom: MINUS . NUMBER

    NUMBER  shift, and go to state 28


state 9

   32 cos: COS . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 29


state 10

   33 sin: SIN . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 30


state 11

   34 tan: TAN . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 31


state 12

   36 log: LOG . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 32


state 13

   35 ln: LN . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 33


state 14

   37 floor: FLOOR . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 34


state 15

    1 program: header varlist stmtlist . trailer
    5 stmtlist: stmtlist . stmt

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    BY         shift, and go to state 35
    FROM       shift, and go to state 36
    TO         shift, and go to state 37
    FILL       shift, and go to state 38
    CIRCLE     shift, and go to state 39
    FLOOR      shift, and go to state 14
    IF         shift, and go to state 40
    WHILE      shift, and go to state 41
    LOOP       shift, and go to state 42
    EXIT       shift, and go to state 43
    DO         shift, and go to state 44
    FOR        shift, and go to state 45
    SAVECOLOR  shift, and go to state 46
    USECOLOR   shift, and go to state 47
    USESIZE    shift, and go to state 48
    SAVEBRUSH  shift, and go to state 49
    USEBRUSH   shift, and go to state 50

    $end       reduce using rule 3 (trailer)
    $end       [reduce using rule 64 (elsec)]
    NUMBER     [reduce using rule 64 (elsec)]
    ID         [reduce using rule 64 (elsec)]
    OPENBRACE  [reduce using rule 64 (elsec)]
    MINUS      [reduce using rule 64 (elsec)]
    COS        [reduce using rule 64 (elsec)]
    SIN        [reduce using rule 64 (elsec)]
    TAN        [reduce using rule 64 (elsec)]
    LOG        [reduce using rule 64 (elsec)]
    LN         [reduce using rule 64 (elsec)]
    BY         [reduce using rule 64 (elsec)]
    FROM       [reduce using rule 64 (elsec)]
    TO         [reduce using rule 64 (elsec)]
    FILL       [reduce using rule 64 (elsec)]
    CIRCLE     [reduce using rule 64 (elsec)]
    FLOOR      [reduce using rule 64 (elsec)]
    IF         [reduce using rule 64 (elsec)]
    WHILE      [reduce using rule 64 (elsec)]
    LOOP       [reduce using rule 64 (elsec)]
    EXIT       [reduce using rule 64 (elsec)]
    DO         [reduce using rule 64 (elsec)]
    FOR        [reduce using rule 64 (elsec)]
    SAVECOLOR  [reduce using rule 64 (elsec)]
    USECOLOR   [reduce using rule 64 (elsec)]
    USESIZE    [reduce using rule 64 (elsec)]
    SAVEBRUSH  [reduce using rule 64 (elsec)]
    USEBRUSH   [reduce using rule 64 (elsec)]
    $default   reduce using rule 3 (trailer)

    trailer  go to state 51
    expr     go to state 16
    prod     go to state 17
    div      go to state 18
    cos      go to state 19
    sin      go to state 20
    tan      go to state 21
    ln       go to state 22
    log      go to state 23
    floor    go to state 24
    atom     go to state 25
    var      go to state 52
    stmt     go to state 53
    circle   go to state 54
    elsec    go to state 55
    ifc      go to state 56
    whilec   go to state 57
    forc     go to state 58


state 16

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr
   43 var: expr . DOUBLEPOINT EXPORTER ID
   44    | expr . EXPORTER ID

    EXPORTER     shift, and go to state 59
    DOUBLEPOINT  shift, and go to state 60
    PLUS         shift, and go to state 61
    MINUS        shift, and go to state 62
    MOD          shift, and go to state 63


state 17

   18 expr: prod .
   30 prod: prod . MUL atom

    MUL  shift, and go to state 64

    $default  reduce using rule 18 (expr)


state 18

   19 expr: div .

    $default  reduce using rule 19 (expr)


state 19

   20 expr: cos .

    $default  reduce using rule 20 (expr)


state 20

   21 expr: sin .

    $default  reduce using rule 21 (expr)


state 21

   22 expr: tan .

    $default  reduce using rule 22 (expr)


state 22

   23 expr: ln .

    $default  reduce using rule 23 (expr)


state 23

   24 expr: log .

    $default  reduce using rule 24 (expr)


state 24

   25 expr: floor .

    $default  reduce using rule 25 (expr)


state 25

   29 prod: atom .
   31 div: atom . DIV atom

    DIV  shift, and go to state 65

    $default  reduce using rule 29 (prod)


state 26

    7 varlist: varlist var . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 27

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr
   41 atom: OPENBRACE expr . CLOSEBRACE

    CLOSEBRACE  shift, and go to state 67
    PLUS        shift, and go to state 61
    MINUS       shift, and go to state 62
    MOD         shift, and go to state 63


state 28

   39 atom: MINUS NUMBER .

    $default  reduce using rule 39 (atom)


state 29

   32 cos: COS atom .

    $default  reduce using rule 32 (cos)


state 30

   33 sin: SIN atom .

    $default  reduce using rule 33 (sin)


state 31

   34 tan: TAN atom .

    $default  reduce using rule 34 (tan)


state 32

   36 log: LOG atom .

    $default  reduce using rule 36 (log)


state 33

   35 ln: LN atom .

    $default  reduce using rule 35 (ln)


state 34

   37 floor: FLOOR atom .

    $default  reduce using rule 37 (floor)


state 35

   59 stmt: BY . point SEMICOLON
   60     | BY . point

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 68
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25
    point  go to state 69


state 36

   54 stmt: FROM . @2 point

    $default  reduce using rule 53 (@2)

    @2  go to state 70


state 37

   57 stmt: TO . point @3 SEMICOLON
   58     | TO . point

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 68
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25
    point  go to state 71


state 38

   55 stmt: FILL . SEMICOLON

    SEMICOLON  shift, and go to state 72


state 39

   61 circle: CIRCLE . point NUMBER NUMBER NUMBER

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 68
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25
    point  go to state 73


state 40

   70 ifc: IF . OPENBRACE bool CLOSEBRACE @6 block
   73 stmt: IF . error

    error      shift, and go to state 74
    OPENBRACE  shift, and go to state 75


state 41

   81 whilec: WHILE . OPENBRACE @9 bool CLOSEBRACE @10 block

    OPENBRACE  shift, and go to state 76


state 42

   75 stmt: LOOP . @7 block

    $default  reduce using rule 74 (@7)

    @7  go to state 77


state 43

   76 stmt: EXIT . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 44

   78 stmt: DO . OPENBRACE NUMBER CLOSEBRACE @8 block

    OPENBRACE  shift, and go to state 79


state 45

   84 forc: FOR . OPENBRACE var @11 SEMICOLON bool SEMICOLON @12 var CLOSEBRACE block

    OPENBRACE  shift, and go to state 80


state 46

   46 stmt: SAVECOLOR . OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    OPENBRACE  shift, and go to state 81


state 47

   47 stmt: USECOLOR . OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON
   48     | USECOLOR . OPENBRACE ID CLOSEBRACE SEMICOLON

    OPENBRACE  shift, and go to state 82


state 48

   49 stmt: USESIZE . OPENBRACE NUMBER CLOSEBRACE SEMICOLON

    OPENBRACE  shift, and go to state 83


state 49

   50 stmt: SAVEBRUSH . OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   51     | SAVEBRUSH . OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    OPENBRACE  shift, and go to state 84


state 50

   52 stmt: USEBRUSH . OPENBRACE ID CLOSEBRACE SEMICOLON

    OPENBRACE  shift, and go to state 85


state 51

    1 program: header varlist stmtlist trailer .

    $default  reduce using rule 1 (program)


state 52

   45 stmt: var . SEMICOLON

    SEMICOLON  shift, and go to state 86


state 53

    5 stmtlist: stmtlist stmt .

    $default  reduce using rule 5 (stmtlist)


state 54

   62 stmt: circle . SEMICOLON
   63     | circle .

    SEMICOLON  shift, and go to state 87

    $default  reduce using rule 63 (stmt)


state 55

   71 stmt: elsec .

    $default  reduce using rule 71 (stmt)


state 56

   66 elsec: ifc . ELSE @4 elsec
   68      | ifc . ELSE @5 block
   72 stmt: ifc .

    ELSE  shift, and go to state 88

    $default  reduce using rule 72 (stmt)


state 57

   85 stmt: whilec .

    $default  reduce using rule 85 (stmt)


state 58

   86 stmt: forc .

    $default  reduce using rule 86 (stmt)


state 59

   44 var: expr EXPORTER . ID

    ID  shift, and go to state 89


state 60

   43 var: expr DOUBLEPOINT . EXPORTER ID

    EXPORTER  shift, and go to state 90


state 61

   26 expr: expr PLUS . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 91
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 62

   27 expr: expr MINUS . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 92
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 63

   28 expr: expr MOD . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 93
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 64

   30 prod: prod MUL . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 94


state 65

   31 div: atom DIV . atom

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8

    atom  go to state 95


state 66

    7 varlist: varlist var SEMICOLON .

    $default  reduce using rule 7 (varlist)


state 67

   41 atom: OPENBRACE expr CLOSEBRACE .

    $default  reduce using rule 41 (atom)


state 68

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr
   42 point: expr . COMMA expr

    COMMA  shift, and go to state 96
    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63


state 69

   59 stmt: BY point . SEMICOLON
   60     | BY point .

    SEMICOLON  shift, and go to state 97

    $default  reduce using rule 60 (stmt)


state 70

   54 stmt: FROM @2 . point

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 68
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25
    point  go to state 98


state 71

   57 stmt: TO point . @3 SEMICOLON
   58     | TO point .

    SEMICOLON  reduce using rule 56 (@3)
    $default   reduce using rule 58 (stmt)

    @3  go to state 99


state 72

   55 stmt: FILL SEMICOLON .

    $default  reduce using rule 55 (stmt)


state 73

   61 circle: CIRCLE point . NUMBER NUMBER NUMBER

    NUMBER  shift, and go to state 100


state 74

   73 stmt: IF error .

    $default  reduce using rule 73 (stmt)


state 75

   70 ifc: IF OPENBRACE . bool CLOSEBRACE @6 block

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    bool   go to state 101
    expr   go to state 102
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 76

   81 whilec: WHILE OPENBRACE . @9 bool CLOSEBRACE @10 block

    $default  reduce using rule 79 (@9)

    @9  go to state 103


state 77

   75 stmt: LOOP @7 . block

    OPENCURLYBRACE  shift, and go to state 104

    block  go to state 105


state 78

   76 stmt: EXIT SEMICOLON .

    $default  reduce using rule 76 (stmt)


state 79

   78 stmt: DO OPENBRACE . NUMBER CLOSEBRACE @8 block

    NUMBER  shift, and go to state 106


state 80

   84 forc: FOR OPENBRACE . var @11 SEMICOLON bool SEMICOLON @12 var CLOSEBRACE block

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 16
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25
    var    go to state 107


state 81

   46 stmt: SAVECOLOR OPENBRACE . NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 108


state 82

   47 stmt: USECOLOR OPENBRACE . NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON
   48     | USECOLOR OPENBRACE . ID CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 109
    ID      shift, and go to state 110


state 83

   49 stmt: USESIZE OPENBRACE . NUMBER CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 111


state 84

   50 stmt: SAVEBRUSH OPENBRACE . NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   51     | SAVEBRUSH OPENBRACE . ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 112
    ID      shift, and go to state 113


state 85

   52 stmt: USEBRUSH OPENBRACE . ID CLOSEBRACE SEMICOLON

    ID  shift, and go to state 114


state 86

   45 stmt: var SEMICOLON .

    $default  reduce using rule 45 (stmt)


state 87

   62 stmt: circle SEMICOLON .

    $default  reduce using rule 62 (stmt)


state 88

   66 elsec: ifc ELSE . @4 elsec
   68      | ifc ELSE . @5 block

    OPENCURLYBRACE  reduce using rule 67 (@5)
    $default        reduce using rule 65 (@4)

    @4  go to state 115
    @5  go to state 116


state 89

   44 var: expr EXPORTER ID .

    $default  reduce using rule 44 (var)


state 90

   43 var: expr DOUBLEPOINT EXPORTER . ID

    ID  shift, and go to state 117


state 91

   26 expr: expr . PLUS expr
   26     | expr PLUS expr .
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    PLUS      [reduce using rule 26 (expr)]
    MINUS     [reduce using rule 26 (expr)]
    MOD       [reduce using rule 26 (expr)]
    $default  reduce using rule 26 (expr)


state 92

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   27     | expr MINUS expr .
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    PLUS      [reduce using rule 27 (expr)]
    MINUS     [reduce using rule 27 (expr)]
    MOD       [reduce using rule 27 (expr)]
    $default  reduce using rule 27 (expr)


state 93

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr
   28     | expr MOD expr .

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    PLUS      [reduce using rule 28 (expr)]
    MINUS     [reduce using rule 28 (expr)]
    MOD       [reduce using rule 28 (expr)]
    $default  reduce using rule 28 (expr)


state 94

   30 prod: prod MUL atom .

    $default  reduce using rule 30 (prod)


state 95

   31 div: atom DIV atom .

    $default  reduce using rule 31 (div)


state 96

   42 point: expr COMMA . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 118
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 97

   59 stmt: BY point SEMICOLON .

    $default  reduce using rule 59 (stmt)


state 98

   54 stmt: FROM @2 point .

    $default  reduce using rule 54 (stmt)


state 99

   57 stmt: TO point @3 . SEMICOLON

    SEMICOLON  shift, and go to state 119


state 100

   61 circle: CIRCLE point NUMBER . NUMBER NUMBER

    NUMBER  shift, and go to state 120


state 101

   70 ifc: IF OPENBRACE bool . CLOSEBRACE @6 block

    CLOSEBRACE  shift, and go to state 121


state 102

    8 bool: expr . IMPORTER IMPORTER expr
    9     | expr . IMPORTER EQUALS expr
   10     | expr . EXPORTER EXPORTER expr
   11     | expr . EXPORTER EQUALS expr
   12     | expr . EQUALS EQUALS expr
   13     | expr . NOT EQUALS expr
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    EXPORTER  shift, and go to state 122
    IMPORTER  shift, and go to state 123
    PLUS      shift, and go to state 61
    MINUS     shift, and go to state 62
    MOD       shift, and go to state 63
    EQUALS    shift, and go to state 124
    NOT       shift, and go to state 125


state 103

   81 whilec: WHILE OPENBRACE @9 . bool CLOSEBRACE @10 block

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    bool   go to state 126
    expr   go to state 102
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 104

   17 block: OPENCURLYBRACE . @1 stmts CLOSECURLYBRACE

    $default  reduce using rule 16 (@1)

    @1  go to state 127


state 105

   75 stmt: LOOP @7 block .

    $default  reduce using rule 75 (stmt)


state 106

   78 stmt: DO OPENBRACE NUMBER . CLOSEBRACE @8 block

    CLOSEBRACE  shift, and go to state 128


state 107

   84 forc: FOR OPENBRACE var . @11 SEMICOLON bool SEMICOLON @12 var CLOSEBRACE block

    $default  reduce using rule 82 (@11)

    @11  go to state 129


state 108

   46 stmt: SAVECOLOR OPENBRACE NUMBER . COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 130


state 109

   47 stmt: USECOLOR OPENBRACE NUMBER . COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON

    COMMA  shift, and go to state 131


state 110

   48 stmt: USECOLOR OPENBRACE ID . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 132


state 111

   49 stmt: USESIZE OPENBRACE NUMBER . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 133


state 112

   50 stmt: SAVEBRUSH OPENBRACE NUMBER . COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 134


state 113

   51 stmt: SAVEBRUSH OPENBRACE ID . COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 135


state 114

   52 stmt: USEBRUSH OPENBRACE ID . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 136


state 115

   66 elsec: ifc ELSE @4 . elsec

    IF  shift, and go to state 137

    IF        [reduce using rule 64 (elsec)]
    $default  reduce using rule 64 (elsec)

    elsec  go to state 138
    ifc    go to state 139


state 116

   68 elsec: ifc ELSE @5 . block

    OPENCURLYBRACE  shift, and go to state 104

    block  go to state 140


state 117

   43 var: expr DOUBLEPOINT EXPORTER ID .

    $default  reduce using rule 43 (var)


state 118

   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr
   42 point: expr COMMA expr .

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    MINUS     [reduce using rule 42 (point)]
    $default  reduce using rule 42 (point)


state 119

   57 stmt: TO point @3 SEMICOLON .

    $default  reduce using rule 57 (stmt)


state 120

   61 circle: CIRCLE point NUMBER NUMBER . NUMBER

    NUMBER  shift, and go to state 141


state 121

   70 ifc: IF OPENBRACE bool CLOSEBRACE . @6 block

    $default  reduce using rule 69 (@6)

    @6  go to state 142


state 122

   10 bool: expr EXPORTER . EXPORTER expr
   11     | expr EXPORTER . EQUALS expr

    EXPORTER  shift, and go to state 143
    EQUALS    shift, and go to state 144


state 123

    8 bool: expr IMPORTER . IMPORTER expr
    9     | expr IMPORTER . EQUALS expr

    IMPORTER  shift, and go to state 145
    EQUALS    shift, and go to state 146


state 124

   12 bool: expr EQUALS . EQUALS expr

    EQUALS  shift, and go to state 147


state 125

   13 bool: expr NOT . EQUALS expr

    EQUALS  shift, and go to state 148


state 126

   81 whilec: WHILE OPENBRACE @9 bool . CLOSEBRACE @10 block

    CLOSEBRACE  shift, and go to state 149


state 127

   17 block: OPENCURLYBRACE @1 . stmts CLOSECURLYBRACE

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    BY         shift, and go to state 35
    FROM       shift, and go to state 36
    TO         shift, and go to state 37
    FILL       shift, and go to state 38
    CIRCLE     shift, and go to state 39
    FLOOR      shift, and go to state 14
    IF         shift, and go to state 40
    WHILE      shift, and go to state 41
    LOOP       shift, and go to state 42
    EXIT       shift, and go to state 43
    DO         shift, and go to state 44
    FOR        shift, and go to state 45
    SAVECOLOR  shift, and go to state 46
    USECOLOR   shift, and go to state 47
    USESIZE    shift, and go to state 48
    SAVEBRUSH  shift, and go to state 49
    USEBRUSH   shift, and go to state 50

    NUMBER     [reduce using rule 64 (elsec)]
    ID         [reduce using rule 64 (elsec)]
    OPENBRACE  [reduce using rule 64 (elsec)]
    MINUS      [reduce using rule 64 (elsec)]
    COS        [reduce using rule 64 (elsec)]
    SIN        [reduce using rule 64 (elsec)]
    TAN        [reduce using rule 64 (elsec)]
    LOG        [reduce using rule 64 (elsec)]
    LN         [reduce using rule 64 (elsec)]
    BY         [reduce using rule 64 (elsec)]
    FROM       [reduce using rule 64 (elsec)]
    TO         [reduce using rule 64 (elsec)]
    FILL       [reduce using rule 64 (elsec)]
    CIRCLE     [reduce using rule 64 (elsec)]
    FLOOR      [reduce using rule 64 (elsec)]
    IF         [reduce using rule 64 (elsec)]
    WHILE      [reduce using rule 64 (elsec)]
    LOOP       [reduce using rule 64 (elsec)]
    EXIT       [reduce using rule 64 (elsec)]
    DO         [reduce using rule 64 (elsec)]
    FOR        [reduce using rule 64 (elsec)]
    SAVECOLOR  [reduce using rule 64 (elsec)]
    USECOLOR   [reduce using rule 64 (elsec)]
    USESIZE    [reduce using rule 64 (elsec)]
    SAVEBRUSH  [reduce using rule 64 (elsec)]
    USEBRUSH   [reduce using rule 64 (elsec)]
    $default   reduce using rule 64 (elsec)

    stmts   go to state 150
    expr    go to state 16
    prod    go to state 17
    div     go to state 18
    cos     go to state 19
    sin     go to state 20
    tan     go to state 21
    ln      go to state 22
    log     go to state 23
    floor   go to state 24
    atom    go to state 25
    var     go to state 52
    stmt    go to state 151
    circle  go to state 54
    elsec   go to state 55
    ifc     go to state 56
    whilec  go to state 57
    forc    go to state 58


state 128

   78 stmt: DO OPENBRACE NUMBER CLOSEBRACE . @8 block

    $default  reduce using rule 77 (@8)

    @8  go to state 152


state 129

   84 forc: FOR OPENBRACE var @11 . SEMICOLON bool SEMICOLON @12 var CLOSEBRACE block

    SEMICOLON  shift, and go to state 153


state 130

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA . NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 154


state 131

   47 stmt: USECOLOR OPENBRACE NUMBER COMMA . NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 155


state 132

   48 stmt: USECOLOR OPENBRACE ID CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 156


state 133

   49 stmt: USESIZE OPENBRACE NUMBER CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 157


state 134

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA . NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 158


state 135

   51 stmt: SAVEBRUSH OPENBRACE ID COMMA . NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 159


state 136

   52 stmt: USEBRUSH OPENBRACE ID CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 160


state 137

   70 ifc: IF . OPENBRACE bool CLOSEBRACE @6 block

    OPENBRACE  shift, and go to state 75


state 138

   66 elsec: ifc ELSE @4 elsec .

    $default  reduce using rule 66 (elsec)


state 139

   66 elsec: ifc . ELSE @4 elsec
   68      | ifc . ELSE @5 block

    ELSE  shift, and go to state 88


state 140

   68 elsec: ifc ELSE @5 block .

    $default  reduce using rule 68 (elsec)


state 141

   61 circle: CIRCLE point NUMBER NUMBER NUMBER .

    $default  reduce using rule 61 (circle)


state 142

   70 ifc: IF OPENBRACE bool CLOSEBRACE @6 . block

    OPENCURLYBRACE  shift, and go to state 104

    block  go to state 161


state 143

   10 bool: expr EXPORTER EXPORTER . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 162
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 144

   11 bool: expr EXPORTER EQUALS . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 163
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 145

    8 bool: expr IMPORTER IMPORTER . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 164
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 146

    9 bool: expr IMPORTER EQUALS . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 165
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 147

   12 bool: expr EQUALS EQUALS . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 166
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 148

   13 bool: expr NOT EQUALS . expr

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 167
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 149

   81 whilec: WHILE OPENBRACE @9 bool CLOSEBRACE . @10 block

    $default  reduce using rule 80 (@10)

    @10  go to state 168


state 150

   14 stmts: stmts . stmt
   17 block: OPENCURLYBRACE @1 stmts . CLOSECURLYBRACE

    NUMBER           shift, and go to state 5
    ID               shift, and go to state 6
    OPENBRACE        shift, and go to state 7
    CLOSECURLYBRACE  shift, and go to state 169
    MINUS            shift, and go to state 8
    COS              shift, and go to state 9
    SIN              shift, and go to state 10
    TAN              shift, and go to state 11
    LOG              shift, and go to state 12
    LN               shift, and go to state 13
    BY               shift, and go to state 35
    FROM             shift, and go to state 36
    TO               shift, and go to state 37
    FILL             shift, and go to state 38
    CIRCLE           shift, and go to state 39
    FLOOR            shift, and go to state 14
    IF               shift, and go to state 40
    WHILE            shift, and go to state 41
    LOOP             shift, and go to state 42
    EXIT             shift, and go to state 43
    DO               shift, and go to state 44
    FOR              shift, and go to state 45
    SAVECOLOR        shift, and go to state 46
    USECOLOR         shift, and go to state 47
    USESIZE          shift, and go to state 48
    SAVEBRUSH        shift, and go to state 49
    USEBRUSH         shift, and go to state 50

    NUMBER           [reduce using rule 64 (elsec)]
    ID               [reduce using rule 64 (elsec)]
    OPENBRACE        [reduce using rule 64 (elsec)]
    CLOSECURLYBRACE  [reduce using rule 64 (elsec)]
    MINUS            [reduce using rule 64 (elsec)]
    COS              [reduce using rule 64 (elsec)]
    SIN              [reduce using rule 64 (elsec)]
    TAN              [reduce using rule 64 (elsec)]
    LOG              [reduce using rule 64 (elsec)]
    LN               [reduce using rule 64 (elsec)]
    BY               [reduce using rule 64 (elsec)]
    FROM             [reduce using rule 64 (elsec)]
    TO               [reduce using rule 64 (elsec)]
    FILL             [reduce using rule 64 (elsec)]
    CIRCLE           [reduce using rule 64 (elsec)]
    FLOOR            [reduce using rule 64 (elsec)]
    IF               [reduce using rule 64 (elsec)]
    WHILE            [reduce using rule 64 (elsec)]
    LOOP             [reduce using rule 64 (elsec)]
    EXIT             [reduce using rule 64 (elsec)]
    DO               [reduce using rule 64 (elsec)]
    FOR              [reduce using rule 64 (elsec)]
    SAVECOLOR        [reduce using rule 64 (elsec)]
    USECOLOR         [reduce using rule 64 (elsec)]
    USESIZE          [reduce using rule 64 (elsec)]
    SAVEBRUSH        [reduce using rule 64 (elsec)]
    USEBRUSH         [reduce using rule 64 (elsec)]

    expr    go to state 16
    prod    go to state 17
    div     go to state 18
    cos     go to state 19
    sin     go to state 20
    tan     go to state 21
    ln      go to state 22
    log     go to state 23
    floor   go to state 24
    atom    go to state 25
    var     go to state 52
    stmt    go to state 170
    circle  go to state 54
    elsec   go to state 55
    ifc     go to state 56
    whilec  go to state 57
    forc    go to state 58


state 151

   15 stmts: stmt .

    $default  reduce using rule 15 (stmts)


state 152

   78 stmt: DO OPENBRACE NUMBER CLOSEBRACE @8 . block

    OPENCURLYBRACE  shift, and go to state 104

    block  go to state 171


state 153

   84 forc: FOR OPENBRACE var @11 SEMICOLON . bool SEMICOLON @12 var CLOSEBRACE block

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    bool   go to state 172
    expr   go to state 102
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25


state 154

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER . COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 173


state 155

   47 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER . COMMA NUMBER CLOSEBRACE SEMICOLON

    COMMA  shift, and go to state 174


state 156

   48 stmt: USECOLOR OPENBRACE ID CLOSEBRACE SEMICOLON .

    $default  reduce using rule 48 (stmt)


state 157

   49 stmt: USESIZE OPENBRACE NUMBER CLOSEBRACE SEMICOLON .

    $default  reduce using rule 49 (stmt)


state 158

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER . COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 175


state 159

   51 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER . CLOSEBRACE EXPORTER ID SEMICOLON

    CLOSEBRACE  shift, and go to state 176


state 160

   52 stmt: USEBRUSH OPENBRACE ID CLOSEBRACE SEMICOLON .

    $default  reduce using rule 52 (stmt)


state 161

   70 ifc: IF OPENBRACE bool CLOSEBRACE @6 block .

    $default  reduce using rule 70 (ifc)


state 162

   10 bool: expr EXPORTER EXPORTER expr .
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 10 (bool)


state 163

   11 bool: expr EXPORTER EQUALS expr .
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 11 (bool)


state 164

    8 bool: expr IMPORTER IMPORTER expr .
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 8 (bool)


state 165

    9 bool: expr IMPORTER EQUALS expr .
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 9 (bool)


state 166

   12 bool: expr EQUALS EQUALS expr .
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 12 (bool)


state 167

   13 bool: expr NOT EQUALS expr .
   26 expr: expr . PLUS expr
   27     | expr . MINUS expr
   28     | expr . MOD expr

    PLUS   shift, and go to state 61
    MINUS  shift, and go to state 62
    MOD    shift, and go to state 63

    $default  reduce using rule 13 (bool)


state 168

   81 whilec: WHILE OPENBRACE @9 bool CLOSEBRACE @10 . block

    OPENCURLYBRACE  shift, and go to state 104

    block  go to state 177


state 169

   17 block: OPENCURLYBRACE @1 stmts CLOSECURLYBRACE .

    $default  reduce using rule 17 (block)


state 170

   14 stmts: stmts stmt .

    $default  reduce using rule 14 (stmts)


state 171

   78 stmt: DO OPENBRACE NUMBER CLOSEBRACE @8 block .

    $default  reduce using rule 78 (stmt)


state 172

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool . SEMICOLON @12 var CLOSEBRACE block

    SEMICOLON  shift, and go to state 178


state 173

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA . NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 179


state 174

   47 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA . NUMBER CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 180


state 175

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA . NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 181


state 176

   51 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE . EXPORTER ID SEMICOLON

    EXPORTER  shift, and go to state 182


state 177

   81 whilec: WHILE OPENBRACE @9 bool CLOSEBRACE @10 block .

    $default  reduce using rule 81 (whilec)


state 178

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool SEMICOLON . @12 var CLOSEBRACE block

    $default  reduce using rule 83 (@12)

    @12  go to state 183


state 179

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER . CLOSEBRACE EXPORTER ID SEMICOLON

    CLOSEBRACE  shift, and go to state 184


state 180

   47 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 185


state 181

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER . COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 186


state 182

   51 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER . ID SEMICOLON

    ID  shift, and go to state 187


state 183

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool SEMICOLON @12 . var CLOSEBRACE block

    NUMBER     shift, and go to state 5
    ID         shift, and go to state 6
    OPENBRACE  shift, and go to state 7
    MINUS      shift, and go to state 8
    COS        shift, and go to state 9
    SIN        shift, and go to state 10
    TAN        shift, and go to state 11
    LOG        shift, and go to state 12
    LN         shift, and go to state 13
    FLOOR      shift, and go to state 14

    expr   go to state 16
    prod   go to state 17
    div    go to state 18
    cos    go to state 19
    sin    go to state 20
    tan    go to state 21
    ln     go to state 22
    log    go to state 23
    floor  go to state 24
    atom   go to state 25
    var    go to state 188


state 184

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE . EXPORTER ID SEMICOLON

    EXPORTER  shift, and go to state 189


state 185

   47 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 190


state 186

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA . NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 191


state 187

   51 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID . SEMICOLON

    SEMICOLON  shift, and go to state 192


state 188

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool SEMICOLON @12 var . CLOSEBRACE block

    CLOSEBRACE  shift, and go to state 193


state 189

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER . ID SEMICOLON

    ID  shift, and go to state 194


state 190

   47 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON .

    $default  reduce using rule 47 (stmt)


state 191

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER . CLOSEBRACE EXPORTER ID SEMICOLON

    CLOSEBRACE  shift, and go to state 195


state 192

   51 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON .

    $default  reduce using rule 51 (stmt)


state 193

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool SEMICOLON @12 var CLOSEBRACE . block

    OPENCURLYBRACE  shift, and go to state 104

    block  go to state 196


state 194

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID . SEMICOLON

    SEMICOLON  shift, and go to state 197


state 195

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE . EXPORTER ID SEMICOLON

    EXPORTER  shift, and go to state 198


state 196

   84 forc: FOR OPENBRACE var @11 SEMICOLON bool SEMICOLON @12 var CLOSEBRACE block .

    $default  reduce using rule 84 (forc)


state 197

   46 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON .

    $default  reduce using rule 46 (stmt)


state 198

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER . ID SEMICOLON

    ID  shift, and go to state 199


state 199

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID . SEMICOLON

    SEMICOLON  shift, and go to state 200


state 200

   50 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON .

    $default  reduce using rule 50 (stmt)
