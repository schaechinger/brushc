Terminals which are not used

   DOUBLE
   FLOAT


State 7 conflicts: 10 shift/reduce
State 19 conflicts: 26 shift/reduce, 1 reduce/reduce
State 101 conflicts: 3 shift/reduce
State 102 conflicts: 3 shift/reduce
State 103 conflicts: 3 shift/reduce
State 130 conflicts: 1 shift/reduce
State 137 conflicts: 1 shift/reduce
State 146 conflicts: 26 shift/reduce
State 171 conflicts: 27 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header proclist varlist stmtlist trailer

    2 header: /* empty */

    3 trailer: /* empty */

    4 @1: /* empty */

    5 block: OPENCURLYBRACE @1 stmts CLOSECURLYBRACE

    6 stmtlist: /* empty */
    7         | stmtlist stmt

    8 stmts: stmts stmt
    9      | stmt

   10 varlist: /* empty */
   11        | varlist var SEMICOLON

   12 @2: /* empty */

   13 proclist: PROC ID @2 OPENBRACE arglist CLOSEBRACE block

   14 arglist: /* empty */
   15        | arguments

   16 arguments: ID
   17          | ID COMMA arguments

   18 stmt: ID OPENBRACE paramlist CLOSEBRACE SEMICOLON

   19 paramlist: /* empty */
   20          | params

   21 params: expr
   22       | params COMMA expr

   23 bool: expr IMPORTER IMPORTER expr
   24     | expr IMPORTER EQUALS expr
   25     | expr EXPORTER EXPORTER expr
   26     | expr EXPORTER EQUALS expr
   27     | expr EQUALS EQUALS expr
   28     | expr NOT EQUALS expr

   29 expr: prod
   30     | div
   31     | cos
   32     | sin
   33     | tan
   34     | ln
   35     | log
   36     | floor
   37     | expr PLUS expr
   38     | expr MINUS expr
   39     | expr MOD expr

   40 prod: atom
   41     | prod MUL atom

   42 div: atom DIV atom

   43 cos: COS atom

   44 sin: SIN atom

   45 tan: TAN atom

   46 ln: LN atom

   47 log: LOG atom

   48 floor: FLOOR atom

   49 atom: NUMBER
   50     | MINUS NUMBER
   51     | ID
   52     | OPENBRACE expr CLOSEBRACE

   53 point: expr COMMA expr

   54 var: expr DOUBLEPOINT EXPORTER ID
   55    | expr EXPORTER ID

   56 stmt: var SEMICOLON
   57     | SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   58     | USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON
   59     | USECOLOR OPENBRACE ID CLOSEBRACE SEMICOLON
   60     | USESIZE OPENBRACE NUMBER CLOSEBRACE SEMICOLON
   61     | SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   62     | SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   63     | USEBRUSH OPENBRACE ID CLOSEBRACE SEMICOLON

   64 @3: /* empty */

   65 stmt: FROM @3 point
   66     | FILL SEMICOLON

   67 @4: /* empty */

   68 stmt: TO point @4 SEMICOLON
   69     | TO point
   70     | BY point SEMICOLON
   71     | BY point

   72 circle: CIRCLE point NUMBER NUMBER NUMBER

   73 stmt: circle SEMICOLON
   74     | circle

   75 elsec: /* empty */

   76 @5: /* empty */

   77 elsec: ifc ELSE @5 elsec

   78 @6: /* empty */

   79 elsec: ifc ELSE @6 block

   80 @7: /* empty */

   81 ifc: IF OPENBRACE bool CLOSEBRACE @7 block

   82 stmt: elsec
   83     | ifc
   84     | IF error

   85 @8: /* empty */

   86 stmt: LOOP @8 block
   87     | EXIT SEMICOLON

   88 @9: /* empty */

   89 stmt: DO OPENBRACE NUMBER CLOSEBRACE @9 block

   90 @10: /* empty */

   91 @11: /* empty */

   92 whilec: WHILE OPENBRACE @10 bool CLOSEBRACE @11 block

   93 @12: /* empty */

   94 @13: /* empty */

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool SEMICOLON @13 var CLOSEBRACE block

   96 stmt: whilec
   97     | forc


Terminals, with rules where they appear

$end (0) 0
error (256) 84
NUMBER (258) 49 50 57 58 60 61 62 72 89
DOUBLE (259)
FLOAT (260)
ID (261) 13 16 17 18 51 54 55 57 59 61 62 63
COMMA (262) 17 22 53 57 58 61 62
SEMICOLON (263) 11 18 56 57 58 59 60 61 62 63 66 68 70 73 87 95
EXPORTER (264) 25 26 54 55 57 61 62
IMPORTER (265) 23 24
DOUBLEPOINT (266) 54
OPENBRACE (267) 13 18 52 57 58 59 60 61 62 63 81 89 92 95
CLOSEBRACE (268) 13 18 52 57 58 59 60 61 62 63 81 89 92 95
OPENCURLYBRACE (269) 5
CLOSECURLYBRACE (270) 5
PROC (271) 13
PLUS (272) 37
MINUS (273) 38 50
MUL (274) 41
DIV (275) 42
MOD (276) 39
EQUALS (277) 24 26 27 28
NOT (278) 28
COS (279) 43
SIN (280) 44
TAN (281) 45
LOG (282) 47
LN (283) 46
BY (284) 70 71
FROM (285) 65
TO (286) 68 69
FILL (287) 66
CIRCLE (288) 72
FLOOR (289) 48
IF (290) 81 84
ELSE (291) 77 79
WHILE (292) 92
LOOP (293) 86
EXIT (294) 87
DO (295) 89
FOR (296) 95
SAVECOLOR (297) 57
USECOLOR (298) 58 59
USESIZE (299) 60
SAVEBRUSH (300) 61 62
USEBRUSH (301) 63


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
header (49)
    on left: 2, on right: 1
trailer (50)
    on left: 3, on right: 1
block (51)
    on left: 5, on right: 13 79 81 86 89 92 95
@1 (52)
    on left: 4, on right: 5
stmtlist (53)
    on left: 6 7, on right: 1 7
stmts (54)
    on left: 8 9, on right: 5 8
varlist (55)
    on left: 10 11, on right: 1 11
proclist (56)
    on left: 13, on right: 1
@2 (57)
    on left: 12, on right: 13
arglist (58)
    on left: 14 15, on right: 13
arguments (59)
    on left: 16 17, on right: 15 17
stmt (60)
    on left: 18 56 57 58 59 60 61 62 63 65 66 68 69 70 71 73 74 82
    83 84 86 87 89 96 97, on right: 7 8 9
paramlist (61)
    on left: 19 20, on right: 18
params (62)
    on left: 21 22, on right: 20 22
bool (63)
    on left: 23 24 25 26 27 28, on right: 81 92 95
expr (64)
    on left: 29 30 31 32 33 34 35 36 37 38 39, on right: 21 22 23 24
    25 26 27 28 37 38 39 52 53 54 55
prod (65)
    on left: 40 41, on right: 29 41
div (66)
    on left: 42, on right: 30
cos (67)
    on left: 43, on right: 31
sin (68)
    on left: 44, on right: 32
tan (69)
    on left: 45, on right: 33
ln (70)
    on left: 46, on right: 34
log (71)
    on left: 47, on right: 35
floor (72)
    on left: 48, on right: 36
atom (73)
    on left: 49 50 51 52, on right: 40 41 42 43 44 45 46 47 48
point (74)
    on left: 53, on right: 65 68 69 70 71 72
var (75)
    on left: 54 55, on right: 11 56 95
@3 (76)
    on left: 64, on right: 65
@4 (77)
    on left: 67, on right: 68
circle (78)
    on left: 72, on right: 73 74
elsec (79)
    on left: 75 77 79, on right: 77 82
@5 (80)
    on left: 76, on right: 77
@6 (81)
    on left: 78, on right: 79
ifc (82)
    on left: 81, on right: 77 79 83
@7 (83)
    on left: 80, on right: 81
@8 (84)
    on left: 85, on right: 86
@9 (85)
    on left: 88, on right: 89
whilec (86)
    on left: 92, on right: 96
@10 (87)
    on left: 90, on right: 92
@11 (88)
    on left: 91, on right: 92
forc (89)
    on left: 95, on right: 97
@12 (90)
    on left: 93, on right: 95
@13 (91)
    on left: 94, on right: 95


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (header)

    program  go to state 1
    header   go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: header . proclist varlist stmtlist trailer

    PROC  shift, and go to state 4

    proclist  go to state 5


state 3

    0 $accept: program $end .

    $default  accept


state 4

   13 proclist: PROC . ID @2 OPENBRACE arglist CLOSEBRACE block

    ID  shift, and go to state 6


state 5

    1 program: header proclist . varlist stmtlist trailer

    $default  reduce using rule 10 (varlist)

    varlist  go to state 7


state 6

   13 proclist: PROC ID . @2 OPENBRACE arglist CLOSEBRACE block

    $default  reduce using rule 12 (@2)

    @2  go to state 8


state 7

    1 program: header proclist varlist . stmtlist trailer
   11 varlist: varlist . var SEMICOLON

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    NUMBER     [reduce using rule 6 (stmtlist)]
    ID         [reduce using rule 6 (stmtlist)]
    OPENBRACE  [reduce using rule 6 (stmtlist)]
    MINUS      [reduce using rule 6 (stmtlist)]
    COS        [reduce using rule 6 (stmtlist)]
    SIN        [reduce using rule 6 (stmtlist)]
    TAN        [reduce using rule 6 (stmtlist)]
    LOG        [reduce using rule 6 (stmtlist)]
    LN         [reduce using rule 6 (stmtlist)]
    FLOOR      [reduce using rule 6 (stmtlist)]
    $default   reduce using rule 6 (stmtlist)

    stmtlist  go to state 19
    expr      go to state 20
    prod      go to state 21
    div       go to state 22
    cos       go to state 23
    sin       go to state 24
    tan       go to state 25
    ln        go to state 26
    log       go to state 27
    floor     go to state 28
    atom      go to state 29
    var       go to state 30


state 8

   13 proclist: PROC ID @2 . OPENBRACE arglist CLOSEBRACE block

    OPENBRACE  shift, and go to state 31


state 9

   49 atom: NUMBER .

    $default  reduce using rule 49 (atom)


state 10

   51 atom: ID .

    $default  reduce using rule 51 (atom)


state 11

   52 atom: OPENBRACE . expr CLOSEBRACE

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 32
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 12

   50 atom: MINUS . NUMBER

    NUMBER  shift, and go to state 33


state 13

   43 cos: COS . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 34


state 14

   44 sin: SIN . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 35


state 15

   45 tan: TAN . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 36


state 16

   47 log: LOG . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 37


state 17

   46 ln: LN . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 38


state 18

   48 floor: FLOOR . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 39


state 19

    1 program: header proclist varlist stmtlist . trailer
    7 stmtlist: stmtlist . stmt

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 40
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    BY         shift, and go to state 41
    FROM       shift, and go to state 42
    TO         shift, and go to state 43
    FILL       shift, and go to state 44
    CIRCLE     shift, and go to state 45
    FLOOR      shift, and go to state 18
    IF         shift, and go to state 46
    WHILE      shift, and go to state 47
    LOOP       shift, and go to state 48
    EXIT       shift, and go to state 49
    DO         shift, and go to state 50
    FOR        shift, and go to state 51
    SAVECOLOR  shift, and go to state 52
    USECOLOR   shift, and go to state 53
    USESIZE    shift, and go to state 54
    SAVEBRUSH  shift, and go to state 55
    USEBRUSH   shift, and go to state 56

    $end       reduce using rule 3 (trailer)
    $end       [reduce using rule 75 (elsec)]
    NUMBER     [reduce using rule 75 (elsec)]
    ID         [reduce using rule 75 (elsec)]
    OPENBRACE  [reduce using rule 75 (elsec)]
    MINUS      [reduce using rule 75 (elsec)]
    COS        [reduce using rule 75 (elsec)]
    SIN        [reduce using rule 75 (elsec)]
    TAN        [reduce using rule 75 (elsec)]
    LOG        [reduce using rule 75 (elsec)]
    LN         [reduce using rule 75 (elsec)]
    BY         [reduce using rule 75 (elsec)]
    FROM       [reduce using rule 75 (elsec)]
    TO         [reduce using rule 75 (elsec)]
    FILL       [reduce using rule 75 (elsec)]
    CIRCLE     [reduce using rule 75 (elsec)]
    FLOOR      [reduce using rule 75 (elsec)]
    IF         [reduce using rule 75 (elsec)]
    WHILE      [reduce using rule 75 (elsec)]
    LOOP       [reduce using rule 75 (elsec)]
    EXIT       [reduce using rule 75 (elsec)]
    DO         [reduce using rule 75 (elsec)]
    FOR        [reduce using rule 75 (elsec)]
    SAVECOLOR  [reduce using rule 75 (elsec)]
    USECOLOR   [reduce using rule 75 (elsec)]
    USESIZE    [reduce using rule 75 (elsec)]
    SAVEBRUSH  [reduce using rule 75 (elsec)]
    USEBRUSH   [reduce using rule 75 (elsec)]
    $default   reduce using rule 3 (trailer)

    trailer  go to state 57
    stmt     go to state 58
    expr     go to state 20
    prod     go to state 21
    div      go to state 22
    cos      go to state 23
    sin      go to state 24
    tan      go to state 25
    ln       go to state 26
    log      go to state 27
    floor    go to state 28
    atom     go to state 29
    var      go to state 59
    circle   go to state 60
    elsec    go to state 61
    ifc      go to state 62
    whilec   go to state 63
    forc     go to state 64


state 20

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr
   54 var: expr . DOUBLEPOINT EXPORTER ID
   55    | expr . EXPORTER ID

    EXPORTER     shift, and go to state 65
    DOUBLEPOINT  shift, and go to state 66
    PLUS         shift, and go to state 67
    MINUS        shift, and go to state 68
    MOD          shift, and go to state 69


state 21

   29 expr: prod .
   41 prod: prod . MUL atom

    MUL  shift, and go to state 70

    $default  reduce using rule 29 (expr)


state 22

   30 expr: div .

    $default  reduce using rule 30 (expr)


state 23

   31 expr: cos .

    $default  reduce using rule 31 (expr)


state 24

   32 expr: sin .

    $default  reduce using rule 32 (expr)


state 25

   33 expr: tan .

    $default  reduce using rule 33 (expr)


state 26

   34 expr: ln .

    $default  reduce using rule 34 (expr)


state 27

   35 expr: log .

    $default  reduce using rule 35 (expr)


state 28

   36 expr: floor .

    $default  reduce using rule 36 (expr)


state 29

   40 prod: atom .
   42 div: atom . DIV atom

    DIV  shift, and go to state 71

    $default  reduce using rule 40 (prod)


state 30

   11 varlist: varlist var . SEMICOLON

    SEMICOLON  shift, and go to state 72


state 31

   13 proclist: PROC ID @2 OPENBRACE . arglist CLOSEBRACE block

    ID  shift, and go to state 73

    $default  reduce using rule 14 (arglist)

    arglist    go to state 74
    arguments  go to state 75


state 32

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr
   52 atom: OPENBRACE expr . CLOSEBRACE

    CLOSEBRACE  shift, and go to state 76
    PLUS        shift, and go to state 67
    MINUS       shift, and go to state 68
    MOD         shift, and go to state 69


state 33

   50 atom: MINUS NUMBER .

    $default  reduce using rule 50 (atom)


state 34

   43 cos: COS atom .

    $default  reduce using rule 43 (cos)


state 35

   44 sin: SIN atom .

    $default  reduce using rule 44 (sin)


state 36

   45 tan: TAN atom .

    $default  reduce using rule 45 (tan)


state 37

   47 log: LOG atom .

    $default  reduce using rule 47 (log)


state 38

   46 ln: LN atom .

    $default  reduce using rule 46 (ln)


state 39

   48 floor: FLOOR atom .

    $default  reduce using rule 48 (floor)


state 40

   18 stmt: ID . OPENBRACE paramlist CLOSEBRACE SEMICOLON
   51 atom: ID .

    OPENBRACE  shift, and go to state 77

    $default  reduce using rule 51 (atom)


state 41

   70 stmt: BY . point SEMICOLON
   71     | BY . point

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 78
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29
    point  go to state 79


state 42

   65 stmt: FROM . @3 point

    $default  reduce using rule 64 (@3)

    @3  go to state 80


state 43

   68 stmt: TO . point @4 SEMICOLON
   69     | TO . point

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 78
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29
    point  go to state 81


state 44

   66 stmt: FILL . SEMICOLON

    SEMICOLON  shift, and go to state 82


state 45

   72 circle: CIRCLE . point NUMBER NUMBER NUMBER

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 78
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29
    point  go to state 83


state 46

   81 ifc: IF . OPENBRACE bool CLOSEBRACE @7 block
   84 stmt: IF . error

    error      shift, and go to state 84
    OPENBRACE  shift, and go to state 85


state 47

   92 whilec: WHILE . OPENBRACE @10 bool CLOSEBRACE @11 block

    OPENBRACE  shift, and go to state 86


state 48

   86 stmt: LOOP . @8 block

    $default  reduce using rule 85 (@8)

    @8  go to state 87


state 49

   87 stmt: EXIT . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 50

   89 stmt: DO . OPENBRACE NUMBER CLOSEBRACE @9 block

    OPENBRACE  shift, and go to state 89


state 51

   95 forc: FOR . OPENBRACE var @12 SEMICOLON bool SEMICOLON @13 var CLOSEBRACE block

    OPENBRACE  shift, and go to state 90


state 52

   57 stmt: SAVECOLOR . OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    OPENBRACE  shift, and go to state 91


state 53

   58 stmt: USECOLOR . OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON
   59     | USECOLOR . OPENBRACE ID CLOSEBRACE SEMICOLON

    OPENBRACE  shift, and go to state 92


state 54

   60 stmt: USESIZE . OPENBRACE NUMBER CLOSEBRACE SEMICOLON

    OPENBRACE  shift, and go to state 93


state 55

   61 stmt: SAVEBRUSH . OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   62     | SAVEBRUSH . OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    OPENBRACE  shift, and go to state 94


state 56

   63 stmt: USEBRUSH . OPENBRACE ID CLOSEBRACE SEMICOLON

    OPENBRACE  shift, and go to state 95


state 57

    1 program: header proclist varlist stmtlist trailer .

    $default  reduce using rule 1 (program)


state 58

    7 stmtlist: stmtlist stmt .

    $default  reduce using rule 7 (stmtlist)


state 59

   56 stmt: var . SEMICOLON

    SEMICOLON  shift, and go to state 96


state 60

   73 stmt: circle . SEMICOLON
   74     | circle .

    SEMICOLON  shift, and go to state 97

    $default  reduce using rule 74 (stmt)


state 61

   82 stmt: elsec .

    $default  reduce using rule 82 (stmt)


state 62

   77 elsec: ifc . ELSE @5 elsec
   79      | ifc . ELSE @6 block
   83 stmt: ifc .

    ELSE  shift, and go to state 98

    $default  reduce using rule 83 (stmt)


state 63

   96 stmt: whilec .

    $default  reduce using rule 96 (stmt)


state 64

   97 stmt: forc .

    $default  reduce using rule 97 (stmt)


state 65

   55 var: expr EXPORTER . ID

    ID  shift, and go to state 99


state 66

   54 var: expr DOUBLEPOINT . EXPORTER ID

    EXPORTER  shift, and go to state 100


state 67

   37 expr: expr PLUS . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 101
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 68

   38 expr: expr MINUS . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 102
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 69

   39 expr: expr MOD . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 103
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 70

   41 prod: prod MUL . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 104


state 71

   42 div: atom DIV . atom

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12

    atom  go to state 105


state 72

   11 varlist: varlist var SEMICOLON .

    $default  reduce using rule 11 (varlist)


state 73

   16 arguments: ID .
   17          | ID . COMMA arguments

    COMMA  shift, and go to state 106

    $default  reduce using rule 16 (arguments)


state 74

   13 proclist: PROC ID @2 OPENBRACE arglist . CLOSEBRACE block

    CLOSEBRACE  shift, and go to state 107


state 75

   15 arglist: arguments .

    $default  reduce using rule 15 (arglist)


state 76

   52 atom: OPENBRACE expr CLOSEBRACE .

    $default  reduce using rule 52 (atom)


state 77

   18 stmt: ID OPENBRACE . paramlist CLOSEBRACE SEMICOLON

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    $default  reduce using rule 19 (paramlist)

    paramlist  go to state 108
    params     go to state 109
    expr       go to state 110
    prod       go to state 21
    div        go to state 22
    cos        go to state 23
    sin        go to state 24
    tan        go to state 25
    ln         go to state 26
    log        go to state 27
    floor      go to state 28
    atom       go to state 29


state 78

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr
   53 point: expr . COMMA expr

    COMMA  shift, and go to state 111
    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69


state 79

   70 stmt: BY point . SEMICOLON
   71     | BY point .

    SEMICOLON  shift, and go to state 112

    $default  reduce using rule 71 (stmt)


state 80

   65 stmt: FROM @3 . point

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 78
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29
    point  go to state 113


state 81

   68 stmt: TO point . @4 SEMICOLON
   69     | TO point .

    SEMICOLON  reduce using rule 67 (@4)
    $default   reduce using rule 69 (stmt)

    @4  go to state 114


state 82

   66 stmt: FILL SEMICOLON .

    $default  reduce using rule 66 (stmt)


state 83

   72 circle: CIRCLE point . NUMBER NUMBER NUMBER

    NUMBER  shift, and go to state 115


state 84

   84 stmt: IF error .

    $default  reduce using rule 84 (stmt)


state 85

   81 ifc: IF OPENBRACE . bool CLOSEBRACE @7 block

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    bool   go to state 116
    expr   go to state 117
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 86

   92 whilec: WHILE OPENBRACE . @10 bool CLOSEBRACE @11 block

    $default  reduce using rule 90 (@10)

    @10  go to state 118


state 87

   86 stmt: LOOP @8 . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 120


state 88

   87 stmt: EXIT SEMICOLON .

    $default  reduce using rule 87 (stmt)


state 89

   89 stmt: DO OPENBRACE . NUMBER CLOSEBRACE @9 block

    NUMBER  shift, and go to state 121


state 90

   95 forc: FOR OPENBRACE . var @12 SEMICOLON bool SEMICOLON @13 var CLOSEBRACE block

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 20
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29
    var    go to state 122


state 91

   57 stmt: SAVECOLOR OPENBRACE . NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 123


state 92

   58 stmt: USECOLOR OPENBRACE . NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON
   59     | USECOLOR OPENBRACE . ID CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 124
    ID      shift, and go to state 125


state 93

   60 stmt: USESIZE OPENBRACE . NUMBER CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 126


state 94

   61 stmt: SAVEBRUSH OPENBRACE . NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON
   62     | SAVEBRUSH OPENBRACE . ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 127
    ID      shift, and go to state 128


state 95

   63 stmt: USEBRUSH OPENBRACE . ID CLOSEBRACE SEMICOLON

    ID  shift, and go to state 129


state 96

   56 stmt: var SEMICOLON .

    $default  reduce using rule 56 (stmt)


state 97

   73 stmt: circle SEMICOLON .

    $default  reduce using rule 73 (stmt)


state 98

   77 elsec: ifc ELSE . @5 elsec
   79      | ifc ELSE . @6 block

    OPENCURLYBRACE  reduce using rule 78 (@6)
    $default        reduce using rule 76 (@5)

    @5  go to state 130
    @6  go to state 131


state 99

   55 var: expr EXPORTER ID .

    $default  reduce using rule 55 (var)


state 100

   54 var: expr DOUBLEPOINT EXPORTER . ID

    ID  shift, and go to state 132


state 101

   37 expr: expr . PLUS expr
   37     | expr PLUS expr .
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    PLUS      [reduce using rule 37 (expr)]
    MINUS     [reduce using rule 37 (expr)]
    MOD       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


state 102

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   38     | expr MINUS expr .
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    PLUS      [reduce using rule 38 (expr)]
    MINUS     [reduce using rule 38 (expr)]
    MOD       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


state 103

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr
   39     | expr MOD expr .

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    PLUS      [reduce using rule 39 (expr)]
    MINUS     [reduce using rule 39 (expr)]
    MOD       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


state 104

   41 prod: prod MUL atom .

    $default  reduce using rule 41 (prod)


state 105

   42 div: atom DIV atom .

    $default  reduce using rule 42 (div)


state 106

   17 arguments: ID COMMA . arguments

    ID  shift, and go to state 73

    arguments  go to state 133


state 107

   13 proclist: PROC ID @2 OPENBRACE arglist CLOSEBRACE . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 134


state 108

   18 stmt: ID OPENBRACE paramlist . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 135


state 109

   20 paramlist: params .
   22 params: params . COMMA expr

    COMMA  shift, and go to state 136

    $default  reduce using rule 20 (paramlist)


state 110

   21 params: expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 21 (params)


state 111

   53 point: expr COMMA . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 137
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 112

   70 stmt: BY point SEMICOLON .

    $default  reduce using rule 70 (stmt)


state 113

   65 stmt: FROM @3 point .

    $default  reduce using rule 65 (stmt)


state 114

   68 stmt: TO point @4 . SEMICOLON

    SEMICOLON  shift, and go to state 138


state 115

   72 circle: CIRCLE point NUMBER . NUMBER NUMBER

    NUMBER  shift, and go to state 139


state 116

   81 ifc: IF OPENBRACE bool . CLOSEBRACE @7 block

    CLOSEBRACE  shift, and go to state 140


state 117

   23 bool: expr . IMPORTER IMPORTER expr
   24     | expr . IMPORTER EQUALS expr
   25     | expr . EXPORTER EXPORTER expr
   26     | expr . EXPORTER EQUALS expr
   27     | expr . EQUALS EQUALS expr
   28     | expr . NOT EQUALS expr
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    EXPORTER  shift, and go to state 141
    IMPORTER  shift, and go to state 142
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    MOD       shift, and go to state 69
    EQUALS    shift, and go to state 143
    NOT       shift, and go to state 144


state 118

   92 whilec: WHILE OPENBRACE @10 . bool CLOSEBRACE @11 block

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    bool   go to state 145
    expr   go to state 117
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 119

    5 block: OPENCURLYBRACE . @1 stmts CLOSECURLYBRACE

    $default  reduce using rule 4 (@1)

    @1  go to state 146


state 120

   86 stmt: LOOP @8 block .

    $default  reduce using rule 86 (stmt)


state 121

   89 stmt: DO OPENBRACE NUMBER . CLOSEBRACE @9 block

    CLOSEBRACE  shift, and go to state 147


state 122

   95 forc: FOR OPENBRACE var . @12 SEMICOLON bool SEMICOLON @13 var CLOSEBRACE block

    $default  reduce using rule 93 (@12)

    @12  go to state 148


state 123

   57 stmt: SAVECOLOR OPENBRACE NUMBER . COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 149


state 124

   58 stmt: USECOLOR OPENBRACE NUMBER . COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON

    COMMA  shift, and go to state 150


state 125

   59 stmt: USECOLOR OPENBRACE ID . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 151


state 126

   60 stmt: USESIZE OPENBRACE NUMBER . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 152


state 127

   61 stmt: SAVEBRUSH OPENBRACE NUMBER . COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 153


state 128

   62 stmt: SAVEBRUSH OPENBRACE ID . COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 154


state 129

   63 stmt: USEBRUSH OPENBRACE ID . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 155


state 130

   77 elsec: ifc ELSE @5 . elsec

    IF  shift, and go to state 156

    IF        [reduce using rule 75 (elsec)]
    $default  reduce using rule 75 (elsec)

    elsec  go to state 157
    ifc    go to state 158


state 131

   79 elsec: ifc ELSE @6 . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 159


state 132

   54 var: expr DOUBLEPOINT EXPORTER ID .

    $default  reduce using rule 54 (var)


state 133

   17 arguments: ID COMMA arguments .

    $default  reduce using rule 17 (arguments)


state 134

   13 proclist: PROC ID @2 OPENBRACE arglist CLOSEBRACE block .

    $default  reduce using rule 13 (proclist)


state 135

   18 stmt: ID OPENBRACE paramlist CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 160


state 136

   22 params: params COMMA . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 161
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 137

   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr
   53 point: expr COMMA expr .

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    MINUS     [reduce using rule 53 (point)]
    $default  reduce using rule 53 (point)


state 138

   68 stmt: TO point @4 SEMICOLON .

    $default  reduce using rule 68 (stmt)


state 139

   72 circle: CIRCLE point NUMBER NUMBER . NUMBER

    NUMBER  shift, and go to state 162


state 140

   81 ifc: IF OPENBRACE bool CLOSEBRACE . @7 block

    $default  reduce using rule 80 (@7)

    @7  go to state 163


state 141

   25 bool: expr EXPORTER . EXPORTER expr
   26     | expr EXPORTER . EQUALS expr

    EXPORTER  shift, and go to state 164
    EQUALS    shift, and go to state 165


state 142

   23 bool: expr IMPORTER . IMPORTER expr
   24     | expr IMPORTER . EQUALS expr

    IMPORTER  shift, and go to state 166
    EQUALS    shift, and go to state 167


state 143

   27 bool: expr EQUALS . EQUALS expr

    EQUALS  shift, and go to state 168


state 144

   28 bool: expr NOT . EQUALS expr

    EQUALS  shift, and go to state 169


state 145

   92 whilec: WHILE OPENBRACE @10 bool . CLOSEBRACE @11 block

    CLOSEBRACE  shift, and go to state 170


state 146

    5 block: OPENCURLYBRACE @1 . stmts CLOSECURLYBRACE

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 40
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    BY         shift, and go to state 41
    FROM       shift, and go to state 42
    TO         shift, and go to state 43
    FILL       shift, and go to state 44
    CIRCLE     shift, and go to state 45
    FLOOR      shift, and go to state 18
    IF         shift, and go to state 46
    WHILE      shift, and go to state 47
    LOOP       shift, and go to state 48
    EXIT       shift, and go to state 49
    DO         shift, and go to state 50
    FOR        shift, and go to state 51
    SAVECOLOR  shift, and go to state 52
    USECOLOR   shift, and go to state 53
    USESIZE    shift, and go to state 54
    SAVEBRUSH  shift, and go to state 55
    USEBRUSH   shift, and go to state 56

    NUMBER     [reduce using rule 75 (elsec)]
    ID         [reduce using rule 75 (elsec)]
    OPENBRACE  [reduce using rule 75 (elsec)]
    MINUS      [reduce using rule 75 (elsec)]
    COS        [reduce using rule 75 (elsec)]
    SIN        [reduce using rule 75 (elsec)]
    TAN        [reduce using rule 75 (elsec)]
    LOG        [reduce using rule 75 (elsec)]
    LN         [reduce using rule 75 (elsec)]
    BY         [reduce using rule 75 (elsec)]
    FROM       [reduce using rule 75 (elsec)]
    TO         [reduce using rule 75 (elsec)]
    FILL       [reduce using rule 75 (elsec)]
    CIRCLE     [reduce using rule 75 (elsec)]
    FLOOR      [reduce using rule 75 (elsec)]
    IF         [reduce using rule 75 (elsec)]
    WHILE      [reduce using rule 75 (elsec)]
    LOOP       [reduce using rule 75 (elsec)]
    EXIT       [reduce using rule 75 (elsec)]
    DO         [reduce using rule 75 (elsec)]
    FOR        [reduce using rule 75 (elsec)]
    SAVECOLOR  [reduce using rule 75 (elsec)]
    USECOLOR   [reduce using rule 75 (elsec)]
    USESIZE    [reduce using rule 75 (elsec)]
    SAVEBRUSH  [reduce using rule 75 (elsec)]
    USEBRUSH   [reduce using rule 75 (elsec)]
    $default   reduce using rule 75 (elsec)

    stmts   go to state 171
    stmt    go to state 172
    expr    go to state 20
    prod    go to state 21
    div     go to state 22
    cos     go to state 23
    sin     go to state 24
    tan     go to state 25
    ln      go to state 26
    log     go to state 27
    floor   go to state 28
    atom    go to state 29
    var     go to state 59
    circle  go to state 60
    elsec   go to state 61
    ifc     go to state 62
    whilec  go to state 63
    forc    go to state 64


state 147

   89 stmt: DO OPENBRACE NUMBER CLOSEBRACE . @9 block

    $default  reduce using rule 88 (@9)

    @9  go to state 173


state 148

   95 forc: FOR OPENBRACE var @12 . SEMICOLON bool SEMICOLON @13 var CLOSEBRACE block

    SEMICOLON  shift, and go to state 174


state 149

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA . NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 175


state 150

   58 stmt: USECOLOR OPENBRACE NUMBER COMMA . NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 176


state 151

   59 stmt: USECOLOR OPENBRACE ID CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 177


state 152

   60 stmt: USESIZE OPENBRACE NUMBER CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 178


state 153

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA . NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 179


state 154

   62 stmt: SAVEBRUSH OPENBRACE ID COMMA . NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 180


state 155

   63 stmt: USEBRUSH OPENBRACE ID CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 181


state 156

   81 ifc: IF . OPENBRACE bool CLOSEBRACE @7 block

    OPENBRACE  shift, and go to state 85


state 157

   77 elsec: ifc ELSE @5 elsec .

    $default  reduce using rule 77 (elsec)


state 158

   77 elsec: ifc . ELSE @5 elsec
   79      | ifc . ELSE @6 block

    ELSE  shift, and go to state 98


state 159

   79 elsec: ifc ELSE @6 block .

    $default  reduce using rule 79 (elsec)


state 160

   18 stmt: ID OPENBRACE paramlist CLOSEBRACE SEMICOLON .

    $default  reduce using rule 18 (stmt)


state 161

   22 params: params COMMA expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 22 (params)


state 162

   72 circle: CIRCLE point NUMBER NUMBER NUMBER .

    $default  reduce using rule 72 (circle)


state 163

   81 ifc: IF OPENBRACE bool CLOSEBRACE @7 . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 182


state 164

   25 bool: expr EXPORTER EXPORTER . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 183
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 165

   26 bool: expr EXPORTER EQUALS . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 184
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 166

   23 bool: expr IMPORTER IMPORTER . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 185
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 167

   24 bool: expr IMPORTER EQUALS . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 186
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 168

   27 bool: expr EQUALS EQUALS . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 187
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 169

   28 bool: expr NOT EQUALS . expr

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 188
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 170

   92 whilec: WHILE OPENBRACE @10 bool CLOSEBRACE . @11 block

    $default  reduce using rule 91 (@11)

    @11  go to state 189


state 171

    5 block: OPENCURLYBRACE @1 stmts . CLOSECURLYBRACE
    8 stmts: stmts . stmt

    NUMBER           shift, and go to state 9
    ID               shift, and go to state 40
    OPENBRACE        shift, and go to state 11
    CLOSECURLYBRACE  shift, and go to state 190
    MINUS            shift, and go to state 12
    COS              shift, and go to state 13
    SIN              shift, and go to state 14
    TAN              shift, and go to state 15
    LOG              shift, and go to state 16
    LN               shift, and go to state 17
    BY               shift, and go to state 41
    FROM             shift, and go to state 42
    TO               shift, and go to state 43
    FILL             shift, and go to state 44
    CIRCLE           shift, and go to state 45
    FLOOR            shift, and go to state 18
    IF               shift, and go to state 46
    WHILE            shift, and go to state 47
    LOOP             shift, and go to state 48
    EXIT             shift, and go to state 49
    DO               shift, and go to state 50
    FOR              shift, and go to state 51
    SAVECOLOR        shift, and go to state 52
    USECOLOR         shift, and go to state 53
    USESIZE          shift, and go to state 54
    SAVEBRUSH        shift, and go to state 55
    USEBRUSH         shift, and go to state 56

    NUMBER           [reduce using rule 75 (elsec)]
    ID               [reduce using rule 75 (elsec)]
    OPENBRACE        [reduce using rule 75 (elsec)]
    CLOSECURLYBRACE  [reduce using rule 75 (elsec)]
    MINUS            [reduce using rule 75 (elsec)]
    COS              [reduce using rule 75 (elsec)]
    SIN              [reduce using rule 75 (elsec)]
    TAN              [reduce using rule 75 (elsec)]
    LOG              [reduce using rule 75 (elsec)]
    LN               [reduce using rule 75 (elsec)]
    BY               [reduce using rule 75 (elsec)]
    FROM             [reduce using rule 75 (elsec)]
    TO               [reduce using rule 75 (elsec)]
    FILL             [reduce using rule 75 (elsec)]
    CIRCLE           [reduce using rule 75 (elsec)]
    FLOOR            [reduce using rule 75 (elsec)]
    IF               [reduce using rule 75 (elsec)]
    WHILE            [reduce using rule 75 (elsec)]
    LOOP             [reduce using rule 75 (elsec)]
    EXIT             [reduce using rule 75 (elsec)]
    DO               [reduce using rule 75 (elsec)]
    FOR              [reduce using rule 75 (elsec)]
    SAVECOLOR        [reduce using rule 75 (elsec)]
    USECOLOR         [reduce using rule 75 (elsec)]
    USESIZE          [reduce using rule 75 (elsec)]
    SAVEBRUSH        [reduce using rule 75 (elsec)]
    USEBRUSH         [reduce using rule 75 (elsec)]

    stmt    go to state 191
    expr    go to state 20
    prod    go to state 21
    div     go to state 22
    cos     go to state 23
    sin     go to state 24
    tan     go to state 25
    ln      go to state 26
    log     go to state 27
    floor   go to state 28
    atom    go to state 29
    var     go to state 59
    circle  go to state 60
    elsec   go to state 61
    ifc     go to state 62
    whilec  go to state 63
    forc    go to state 64


state 172

    9 stmts: stmt .

    $default  reduce using rule 9 (stmts)


state 173

   89 stmt: DO OPENBRACE NUMBER CLOSEBRACE @9 . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 192


state 174

   95 forc: FOR OPENBRACE var @12 SEMICOLON . bool SEMICOLON @13 var CLOSEBRACE block

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    bool   go to state 193
    expr   go to state 117
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29


state 175

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER . COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 194


state 176

   58 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER . COMMA NUMBER CLOSEBRACE SEMICOLON

    COMMA  shift, and go to state 195


state 177

   59 stmt: USECOLOR OPENBRACE ID CLOSEBRACE SEMICOLON .

    $default  reduce using rule 59 (stmt)


state 178

   60 stmt: USESIZE OPENBRACE NUMBER CLOSEBRACE SEMICOLON .

    $default  reduce using rule 60 (stmt)


state 179

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER . COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 196


state 180

   62 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER . CLOSEBRACE EXPORTER ID SEMICOLON

    CLOSEBRACE  shift, and go to state 197


state 181

   63 stmt: USEBRUSH OPENBRACE ID CLOSEBRACE SEMICOLON .

    $default  reduce using rule 63 (stmt)


state 182

   81 ifc: IF OPENBRACE bool CLOSEBRACE @7 block .

    $default  reduce using rule 81 (ifc)


state 183

   25 bool: expr EXPORTER EXPORTER expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 25 (bool)


state 184

   26 bool: expr EXPORTER EQUALS expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 26 (bool)


state 185

   23 bool: expr IMPORTER IMPORTER expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 23 (bool)


state 186

   24 bool: expr IMPORTER EQUALS expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 24 (bool)


state 187

   27 bool: expr EQUALS EQUALS expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 27 (bool)


state 188

   28 bool: expr NOT EQUALS expr .
   37 expr: expr . PLUS expr
   38     | expr . MINUS expr
   39     | expr . MOD expr

    PLUS   shift, and go to state 67
    MINUS  shift, and go to state 68
    MOD    shift, and go to state 69

    $default  reduce using rule 28 (bool)


state 189

   92 whilec: WHILE OPENBRACE @10 bool CLOSEBRACE @11 . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 198


state 190

    5 block: OPENCURLYBRACE @1 stmts CLOSECURLYBRACE .

    $default  reduce using rule 5 (block)


state 191

    8 stmts: stmts stmt .

    $default  reduce using rule 8 (stmts)


state 192

   89 stmt: DO OPENBRACE NUMBER CLOSEBRACE @9 block .

    $default  reduce using rule 89 (stmt)


state 193

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool . SEMICOLON @13 var CLOSEBRACE block

    SEMICOLON  shift, and go to state 199


state 194

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA . NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 200


state 195

   58 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA . NUMBER CLOSEBRACE SEMICOLON

    NUMBER  shift, and go to state 201


state 196

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA . NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 202


state 197

   62 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE . EXPORTER ID SEMICOLON

    EXPORTER  shift, and go to state 203


state 198

   92 whilec: WHILE OPENBRACE @10 bool CLOSEBRACE @11 block .

    $default  reduce using rule 92 (whilec)


state 199

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool SEMICOLON . @13 var CLOSEBRACE block

    $default  reduce using rule 94 (@13)

    @13  go to state 204


state 200

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER . CLOSEBRACE EXPORTER ID SEMICOLON

    CLOSEBRACE  shift, and go to state 205


state 201

   58 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER . CLOSEBRACE SEMICOLON

    CLOSEBRACE  shift, and go to state 206


state 202

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER . COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    COMMA  shift, and go to state 207


state 203

   62 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER . ID SEMICOLON

    ID  shift, and go to state 208


state 204

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool SEMICOLON @13 . var CLOSEBRACE block

    NUMBER     shift, and go to state 9
    ID         shift, and go to state 10
    OPENBRACE  shift, and go to state 11
    MINUS      shift, and go to state 12
    COS        shift, and go to state 13
    SIN        shift, and go to state 14
    TAN        shift, and go to state 15
    LOG        shift, and go to state 16
    LN         shift, and go to state 17
    FLOOR      shift, and go to state 18

    expr   go to state 20
    prod   go to state 21
    div    go to state 22
    cos    go to state 23
    sin    go to state 24
    tan    go to state 25
    ln     go to state 26
    log    go to state 27
    floor  go to state 28
    atom   go to state 29
    var    go to state 209


state 205

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE . EXPORTER ID SEMICOLON

    EXPORTER  shift, and go to state 210


state 206

   58 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 211


state 207

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA . NUMBER CLOSEBRACE EXPORTER ID SEMICOLON

    NUMBER  shift, and go to state 212


state 208

   62 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID . SEMICOLON

    SEMICOLON  shift, and go to state 213


state 209

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool SEMICOLON @13 var . CLOSEBRACE block

    CLOSEBRACE  shift, and go to state 214


state 210

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER . ID SEMICOLON

    ID  shift, and go to state 215


state 211

   58 stmt: USECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE SEMICOLON .

    $default  reduce using rule 58 (stmt)


state 212

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER . CLOSEBRACE EXPORTER ID SEMICOLON

    CLOSEBRACE  shift, and go to state 216


state 213

   62 stmt: SAVEBRUSH OPENBRACE ID COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON .

    $default  reduce using rule 62 (stmt)


state 214

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool SEMICOLON @13 var CLOSEBRACE . block

    OPENCURLYBRACE  shift, and go to state 119

    block  go to state 217


state 215

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID . SEMICOLON

    SEMICOLON  shift, and go to state 218


state 216

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE . EXPORTER ID SEMICOLON

    EXPORTER  shift, and go to state 219


state 217

   95 forc: FOR OPENBRACE var @12 SEMICOLON bool SEMICOLON @13 var CLOSEBRACE block .

    $default  reduce using rule 95 (forc)


state 218

   57 stmt: SAVECOLOR OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON .

    $default  reduce using rule 57 (stmt)


state 219

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER . ID SEMICOLON

    ID  shift, and go to state 220


state 220

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID . SEMICOLON

    SEMICOLON  shift, and go to state 221


state 221

   61 stmt: SAVEBRUSH OPENBRACE NUMBER COMMA NUMBER COMMA NUMBER COMMA NUMBER CLOSEBRACE EXPORTER ID SEMICOLON .

    $default  reduce using rule 61 (stmt)
